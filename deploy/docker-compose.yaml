services:
  # DATABASES
  catalogdb:
    image: mysql
    container_name: catalogdb
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_USER: api
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: catalogDb

  maindb:
    image: mongo:latest
    container_name: maindb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      AUTOWRAPT_BOOTSTRAP: autodynatrace
    ports:
      - 27017:27017
    depends_on:
      - mongo-express

  ordersdb:
    image: "mcr.microsoft.com/mssql/server"
    container_name: ordersdb
    restart: always
    environment:
      SA_PASSWORD: "Password123"
      ACCEPT_EULA: "Y"
    ports:
      - 1433:1433

  # API's
  catalogapi:
    build: ../catalogapi
    container_name: catalogapi
    image: suchcodewow/dbic-catalogapi
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - catalogdb

  mainapi:
    build:
      context: ../mainapi
      dockerfile: Dockerfile
    container_name: mainapi
    # mainapi2 switches from oneAgentSDK to OpenTel
    image: suchcodewow/dbic-mainapi2
    restart: always
    ports:
      - 5000:5000
    environment:
      dbHostName: maindb
    depends_on:
      - maindb

  ordersapi:
    build:
      context: ../ordersapi
      dockerfile: ./OrdersAPI/Dockerfile
    container_name: ordersapi
    image: suchcodewow/dbic-ordersapi
    environment:
      - DOTNET_ENVIRONMENT=DockerDeploy
    restart: always
    ports:
      - 8000:8000
    depends_on:
      - ordersdb

  quotesapi:
    build:
      context: ../quotesapi2
      dockerfile: Dockerfile
    container_name: quotesapi
    # Quotesapi2 removes fiber
    image: suchcodewow/dbic-quotesapi2
    restart: always
    ports:
      - 6000:6000
    depends_on:
      - maindb

  # UI
  ui:
    build: ../UI
    container_name: ui
    image: suchcodewow/dbic-ui
    ports:
      - 80:80
    depends_on:
      - ordersapi
      - catalogapi
      - quotesapi

  loadgen:
    build: ../loadgen
    container_name: loadgen
    image: suchcodewow/dbic-loadgen
    depends_on:
      - ui
    environment:
      frontendURL: ui
      TEST_DURATION: 3600
      TEST_RATE: 5
      TEST_MAXUSERS: 5
      TEST_DELAY: 5

  #OPTIONAL
  #mongo express
  #CMD -> http://localhost:8081

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@maindb:27017/
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true

  #local "workstation"
  #CMD -> docker exec -it term /bin/sh
  # term:

  # build: .
  # image: term
  # tty: true
  # container_name: term
